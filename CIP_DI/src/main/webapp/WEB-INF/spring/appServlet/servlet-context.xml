<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.clustering.project" />

	<!-- add for scaning any context configration -->	
	<context:annotation-config/>

	<beans:bean id="organizationBean" class="com.clustering.project.javabean.OrganizationBean">
		<beans:property name="ORGANIZATION_SEQ" value="555-55555-UUID555555" />
		<beans:property name="PARENT_ORGANIZATION_SEQ" value="111-1111-UUID1111111" />
		<!-- Occured Error -->
		<!-- beans:property name="DI_SEQ" value="123-4567-UUID890" / -->
	</beans:bean>
	
	<!-- constructor DI  -->
	<beans:bean id="organizationService" class="com.clustering.project.service.OrganizationService">
		<beans:constructor-arg ref="commonCodeDao"/>
	</beans:bean>
	
	<!-- Spring will dynamically “inject” the implemenations with setter way -->
	<beans:bean id="commonCodeDao" class="com.clustering.project.dao.CommonCodeDao" />

	<!-- DI setter --> 
	<beans:bean id="commonCodeService" class="com.clustering.project.service.CommonCodeService">
		<beans:property name="dao">
		    <beans:ref bean="commonCodeDao" />
		</beans:property>
	</beans:bean>
			
</beans:beans>
